{"ast":null,"code":"/// SETUP OSC ///\nvar monoSynth = new Tone.MonoSynth({\n  \"filterEnvelope\": {\n    \"attack\": 0.02,\n    \"decay\": 0.1,\n    \"sustain\": 0.2,\n    \"release\": 0.9\n  },\n  filter: {\n    type: 'lowpass'\n  },\n  oscillator: {\n    type: \"sine\"\n  }\n}).toMaster();\nvar monoSynth = new Tone.MonoSynth().toMaster(); /// INIT FX ///\n\nvar pingPong = new Tone.PingPongDelay(\"16n\", 0.5).toMaster();\nvar freeverb = new Tone.Freeverb({\n  \"wet\": 0\n}).toMaster();\nvar distort = new Tone.Distortion(0.8).toMaster(); /// connect to synth ///\n\nmonoSynth.connect(pingPong);\nmonoSynth.connect(freeverb);\nmonoSynth.connect(distort); //set initial volume\n\nTone.Master.volume.rampTo(-10, 0.05);\n\nnx.onload = function () {\n  nx.colorize(\"#212121\"); // sets accent (default)\n\n  initControls(); //event listeners\n  /// VCO ///\n\n  tabs1.on(\"*\", function (data) {\n    if (data.text === 'saw') data.text = 'sawtooth';\n    monoSynth.oscillator.set({\n      type: data.text\n    });\n  }); /// ADSR ///\n\n  attack.on(\"*\", function (data) {\n    monoSynth.envelope.set({\n      'attack': data.value\n    });\n  });\n  decay.on(\"*\", function (data) {\n    monoSynth.envelope.set({\n      'decay': data.value\n    });\n  });\n  sustain.on(\"*\", function (data) {\n    monoSynth.envelope.set({\n      'sustain': data.value\n    });\n  });\n  release.on(\"*\", function (data) {\n    monoSynth.envelope.set({\n      'release': data.value\n    });\n  }); /// FLTR ///\n\n  dist.on(\"*\", function (data) {\n    if (+data.value === 1) {\n      distort.set({\n        wet: 1\n      });\n    } else {\n      distort.set({\n        wet: 0\n      });\n    }\n  }); /// RVB ///\n\n  rvbAmt.on(\"*\", function (data) {\n    freeverb.set({\n      wet: data.value\n    });\n  }); /// DLY ///\n\n  dlyAmt.on(\"*\", function (data) {\n    pingPong.set({\n      wet: data.value\n    });\n  }); /// VCA ///\n\n  volume.on(\"*\", function (data) {\n    Tone.Master.volume.rampTo(+data.value, 0.05);\n  }); //KBD\n\n  keyboard.on(\"*\", function (data) {\n    if (data.on > 0) playNote(convertMIDI(data.note));else stopNote();\n  });\n};\n\nvar playNote = function (note, vel) {\n  vel = vel / 128;\n  monoSynth.triggerAttack(note);\n};\n\nvar stopNote = function () {\n  monoSynth.triggerRelease();\n};\n\nvar initControls = function () {\n  //VCO\n  tabs1.options = ['sine', 'saw', 'square'];\n  tabs1.choice = 2;\n  tabs1.init();\n  tabs1.draw(); //fltr\n\n  distort.set(\"wet\", 0); //VCA\n\n  volume.set({\n    value: -10,\n    label: false\n  }); //ADSR\n\n  attack.set({\n    value: 0.02\n  });\n  decay.set({\n    value: 0.10\n  });\n  sustain.set({\n    value: 0.20\n  });\n  release.set({\n    value: 0.9\n  });\n  pingPong.set(\"wet\", 0);\n};\n\nvar convertMIDI = function (noteNum) {\n  var octave = Math.floor(noteNum / 12 - 1);\n  var note = \"C C#D D#E F F#G G#A A#B \".substr(noteNum % 12 * 2, 2);\n  var result = note + octave;\n  return result.replace(/\\s/g, '');\n};","map":{"version":3,"sources":["/Users/groovequeen/Desktop/mysynth/src/App.js"],"names":["monoSynth","Tone","MonoSynth","filter","type","oscillator","toMaster","pingPong","PingPongDelay","freeverb","Freeverb","distort","Distortion","connect","Master","volume","rampTo","nx","onload","colorize","initControls","tabs1","on","data","text","set","attack","envelope","value","decay","sustain","release","dist","wet","rvbAmt","dlyAmt","keyboard","playNote","convertMIDI","note","stopNote","vel","triggerAttack","triggerRelease","options","choice","init","draw","label","noteNum","octave","Math","floor","substr","result","replace"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAG,IAAIC,IAAI,CAACC,SAAT,CAAmB;AAEjC,oBAAmB;AACf,cAAW,IADI;AAEf,aAAU,GAFK;AAGf,eAAY,GAHG;AAIf,eAAY;AAJG,GAFc;AAQjCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GARyB;AAWjCC,EAAAA,UAAU,EAAC;AACTD,IAAAA,IAAI,EAAC;AADI;AAXsB,CAAnB,EAcbE,QAda,EAAhB;AAgBA,IAAIN,SAAS,GAAG,IAAIC,IAAI,CAACC,SAAT,GAAqBI,QAArB,EAAhB,C,CAEA;;AACA,IAAIC,QAAQ,GAAG,IAAIN,IAAI,CAACO,aAAT,CAAuB,KAAvB,EAA8B,GAA9B,EAAmCF,QAAnC,EAAf;AACA,IAAIG,QAAQ,GAAG,IAAIR,IAAI,CAACS,QAAT,CAAkB;AAAE,SAAO;AAAT,CAAlB,EAAgCJ,QAAhC,EAAf;AACA,IAAIK,OAAO,GAAG,IAAIV,IAAI,CAACW,UAAT,CAAoB,GAApB,EAAyBN,QAAzB,EAAd,C,CAEA;;AACAN,SAAS,CAACa,OAAV,CAAkBN,QAAlB;AACAP,SAAS,CAACa,OAAV,CAAkBJ,QAAlB;AACAT,SAAS,CAACa,OAAV,CAAkBF,OAAlB,E,CAEA;;AACAV,IAAI,CAACa,MAAL,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0B,CAAC,EAA3B,EAA+B,IAA/B;;AAEAC,EAAE,CAACC,MAAH,GAAY,YAAW;AACvBD,EAAAA,EAAE,CAACE,QAAH,CAAY,SAAZ,EADuB,CACC;;AAExBC,EAAAA,YAAY,GAHW,CAKvB;AACA;;AACAC,EAAAA,KAAK,CAACC,EAAN,CAAS,GAAT,EAAc,UAASC,IAAT,EAAc;AAE1B,QAAGA,IAAI,CAACC,IAAL,KAAY,KAAf,EACED,IAAI,CAACC,IAAL,GAAY,UAAZ;AACFxB,IAAAA,SAAS,CAACK,UAAV,CAAqBoB,GAArB,CAAyB;AAACrB,MAAAA,IAAI,EAAEmB,IAAI,CAACC;AAAZ,KAAzB;AAED,GAND,EAPuB,CAevB;;AACAE,EAAAA,MAAM,CAACJ,EAAP,CAAU,GAAV,EAAe,UAASC,IAAT,EAAc;AAC3BvB,IAAAA,SAAS,CAAC2B,QAAV,CAAmBF,GAAnB,CAAuB;AAAC,gBAAUF,IAAI,CAACK;AAAhB,KAAvB;AACD,GAFD;AAGAC,EAAAA,KAAK,CAACP,EAAN,CAAS,GAAT,EAAc,UAASC,IAAT,EAAc;AAC1BvB,IAAAA,SAAS,CAAC2B,QAAV,CAAmBF,GAAnB,CAAuB;AAAC,eAASF,IAAI,CAACK;AAAf,KAAvB;AACD,GAFD;AAGAE,EAAAA,OAAO,CAACR,EAAR,CAAW,GAAX,EAAgB,UAASC,IAAT,EAAc;AAC5BvB,IAAAA,SAAS,CAAC2B,QAAV,CAAmBF,GAAnB,CAAuB;AAAC,iBAAWF,IAAI,CAACK;AAAjB,KAAvB;AACD,GAFD;AAGAG,EAAAA,OAAO,CAACT,EAAR,CAAW,GAAX,EAAgB,UAASC,IAAT,EAAc;AAC5BvB,IAAAA,SAAS,CAAC2B,QAAV,CAAmBF,GAAnB,CAAuB;AAAC,iBAAWF,IAAI,CAACK;AAAjB,KAAvB;AACD,GAFD,EAzBuB,CA6BvB;;AACAI,EAAAA,IAAI,CAACV,EAAL,CAAQ,GAAR,EAAa,UAASC,IAAT,EAAc;AAEzB,QAAI,CAACA,IAAI,CAACK,KAAN,KAAgB,CAApB,EAAuB;AACrBjB,MAAAA,OAAO,CAACc,GAAR,CAAY;AAACQ,QAAAA,GAAG,EAAE;AAAN,OAAZ;AACD,KAFD,MAEM;AACJtB,MAAAA,OAAO,CAACc,GAAR,CAAY;AAACQ,QAAAA,GAAG,EAAE;AAAN,OAAZ;AACD;AACF,GAPD,EA9BuB,CAuCvB;;AACAC,EAAAA,MAAM,CAACZ,EAAP,CAAU,GAAV,EAAe,UAASC,IAAT,EAAc;AAC3Bd,IAAAA,QAAQ,CAACgB,GAAT,CAAa;AAACQ,MAAAA,GAAG,EAAEV,IAAI,CAACK;AAAX,KAAb;AAED,GAHD,EAxCuB,CA6CvB;;AACAO,EAAAA,MAAM,CAACb,EAAP,CAAU,GAAV,EAAe,UAASC,IAAT,EAAc;AAC3BhB,IAAAA,QAAQ,CAACkB,GAAT,CAAa;AAACQ,MAAAA,GAAG,EAAEV,IAAI,CAACK;AAAX,KAAb;AAED,GAHD,EA9CuB,CAmDvB;;AACAb,EAAAA,MAAM,CAACO,EAAP,CAAU,GAAV,EAAe,UAASC,IAAT,EAAc;AAC3BtB,IAAAA,IAAI,CAACa,MAAL,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0B,CAACO,IAAI,CAACK,KAAhC,EAAuC,IAAvC;AACD,GAFD,EApDuB,CAwDvB;;AACAQ,EAAAA,QAAQ,CAACd,EAAT,CAAY,GAAZ,EAAiB,UAASC,IAAT,EAAc;AAC7B,QAAGA,IAAI,CAACD,EAAL,GAAU,CAAb,EACEe,QAAQ,CAACC,WAAW,CAACf,IAAI,CAACgB,IAAN,CAAZ,CAAR,CADF,KAGEC,QAAQ;AACX,GALD;AAQC,CAjED;;AAmEA,IAAIH,QAAQ,GAAG,UAASE,IAAT,EAAeE,GAAf,EAAmB;AAElCA,EAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AAEAzC,EAAAA,SAAS,CAAC0C,aAAV,CAAwBH,IAAxB;AACC,CALD;;AAOA,IAAIC,QAAQ,GAAG,YAAU;AACzBxC,EAAAA,SAAS,CAAC2C,cAAV;AAEC,CAHD;;AAIA,IAAIvB,YAAY,GAAG,YAAU;AAE7B;AACAC,EAAAA,KAAK,CAACuB,OAAN,GAAgB,CAAC,MAAD,EAAQ,KAAR,EAAc,QAAd,CAAhB;AACAvB,EAAAA,KAAK,CAACwB,MAAN,GAAe,CAAf;AACAxB,EAAAA,KAAK,CAACyB,IAAN;AACAzB,EAAAA,KAAK,CAAC0B,IAAN,GAN6B,CAQ7B;;AACApC,EAAAA,OAAO,CAACc,GAAR,CAAY,KAAZ,EAAmB,CAAnB,EAT6B,CAW7B;;AACAV,EAAAA,MAAM,CAACU,GAAP,CAAW;AAACG,IAAAA,KAAK,EAAC,CAAC,EAAR;AAAYoB,IAAAA,KAAK,EAAE;AAAnB,GAAX,EAZ6B,CAc7B;;AACAtB,EAAAA,MAAM,CAACD,GAAP,CAAW;AAACG,IAAAA,KAAK,EAAC;AAAP,GAAX;AACAC,EAAAA,KAAK,CAACJ,GAAN,CAAU;AAACG,IAAAA,KAAK,EAAC;AAAP,GAAV;AACAE,EAAAA,OAAO,CAACL,GAAR,CAAY;AAACG,IAAAA,KAAK,EAAC;AAAP,GAAZ;AACAG,EAAAA,OAAO,CAACN,GAAR,CAAY;AAACG,IAAAA,KAAK,EAAC;AAAP,GAAZ;AAEArB,EAAAA,QAAQ,CAACkB,GAAT,CAAa,KAAb,EAAmB,CAAnB;AAEC,CAtBD;;AAwBA,IAAIa,WAAW,GAAG,UAASW,OAAT,EAAiB;AAEnC,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAYH,OAAO,GAAG,EAAX,GAAiB,CAA5B,CAAb;AACA,MAAIV,IAAI,GAAG,2BAA2Bc,MAA3B,CAAmCJ,OAAO,GAAG,EAAX,GAAiB,CAAnD,EAAsD,CAAtD,CAAX;AACA,MAAIK,MAAM,GAAGf,IAAI,GAACW,MAAlB;AAEA,SAAOI,MAAM,CAACC,OAAP,CAAe,KAAf,EAAsB,EAAtB,CAAP;AACC,CAPD","sourcesContent":["/// SETUP OSC ///\nvar monoSynth = new Tone.MonoSynth({\n\n  \"filterEnvelope\" : {\n      \"attack\" : 0.02,\n      \"decay\" : 0.1,\n      \"sustain\" : 0.2,\n      \"release\" : 0.9,\n  },\n  filter: {\n    type: 'lowpass'\n  },\n  oscillator:{\n    type:\"sine\"\n  }\n}).toMaster();\n\nvar monoSynth = new Tone.MonoSynth().toMaster();\n\n/// INIT FX ///\nvar pingPong = new Tone.PingPongDelay(\"16n\", 0.5).toMaster();\nvar freeverb = new Tone.Freeverb({ \"wet\": 0 }).toMaster();\nvar distort = new Tone.Distortion(0.8).toMaster();\n\n/// connect to synth ///\nmonoSynth.connect(pingPong);\nmonoSynth.connect(freeverb);\nmonoSynth.connect(distort);\n\n//set initial volume\nTone.Master.volume.rampTo(-10, 0.05);\n\nnx.onload = function() {\nnx.colorize(\"#212121\"); // sets accent (default)\n\ninitControls();\n\n//event listeners\n/// VCO ///\ntabs1.on(\"*\", function(data){\n\n  if(data.text==='saw')\n    data.text = 'sawtooth';\n  monoSynth.oscillator.set({type: data.text});\n\n});\n\n/// ADSR ///\nattack.on(\"*\", function(data){\n  monoSynth.envelope.set({'attack': data.value});\n});\ndecay.on(\"*\", function(data){\n  monoSynth.envelope.set({'decay': data.value});\n});\nsustain.on(\"*\", function(data){\n  monoSynth.envelope.set({'sustain': data.value});\n});\nrelease.on(\"*\", function(data){\n  monoSynth.envelope.set({'release': data.value});\n});\n\n/// FLTR ///\ndist.on(\"*\", function(data){\n\n  if (+data.value === 1) {\n    distort.set({wet: 1});\n  } else{\n    distort.set({wet: 0});\n  }\n});\n\n/// RVB ///\nrvbAmt.on(\"*\", function(data){\n  freeverb.set({wet: data.value});\n\n});\n\n/// DLY ///\ndlyAmt.on(\"*\", function(data){\n  pingPong.set({wet: data.value});\n\n});\n\n/// VCA ///\nvolume.on(\"*\", function(data){\n  Tone.Master.volume.rampTo(+data.value, 0.05);\n});\n\n//KBD\nkeyboard.on(\"*\", function(data){\n  if(data.on > 0)\n    playNote(convertMIDI(data.note));\n  else\n    stopNote();\n});\n\n\n};\n\nvar playNote = function(note, vel){\n\nvel = vel / 128;\n\nmonoSynth.triggerAttack(note);\n}\n\nvar stopNote = function(){\nmonoSynth.triggerRelease();\n\n}\nvar initControls = function(){\n\n//VCO\ntabs1.options = ['sine','saw','square'];\ntabs1.choice = 2;\ntabs1.init();\ntabs1.draw();\n\n//fltr\ndistort.set(\"wet\", 0);\n\n//VCA\nvolume.set({value:-10, label: false});\n\n//ADSR\nattack.set({value:0.02});\ndecay.set({value:0.10});\nsustain.set({value:0.20});\nrelease.set({value:0.9});\n\npingPong.set(\"wet\",0);\n\n};\n\nvar convertMIDI = function(noteNum){\n\nvar octave = Math.floor((noteNum / 12) - 1);\nvar note = \"C C#D D#E F F#G G#A A#B \".substr((noteNum % 12) * 2, 2);\nvar result = note+octave;\n\nreturn result.replace(/\\s/g, '');\n};"]},"metadata":{},"sourceType":"module"}